import pandas as pd
import numpy as np
import datetime

range = pd.date_range('2019-12-11 11:00:00', '2019-12-21 11:00:00', freq='1d')

df1 = pd.DataFrame(index=range)

np.random.seed(2)
df1['value'] = np.random.randint(10, 100, size=df1.shape[0])
df1['amount'] = np.random.randint(1, 5, size=df1.shape[0])
df1['decision'] = np.where((df1['value'] > 60) & (df1['amount'] >= 3), "pass", np.nan)

df1_mask = df1[df1['decision'] == 'pass']
df1_mask

# table2 생성

range2 = pd.date_range('2019-12-11 11:00:00', '2019-12-21 11:00:00', freq='1min')

df2 = pd.DataFrame(index=range2)

np.random.seed(20)
df2['value'] = np.random.randint(10, 100, size=df2.shape[0])

# df1_mask.value.values[0]
df1_mask.index[0]

dt = df1_mask.index[0]+datetime.timedelta(1)
dt

# pass 구간의 기간 뽑기
df2_selected = df2.loc[df1_mask.index[0] : df1_mask.index[0]+datetime.timedelta(1)-datetime.timedelta(minutes=1)]
df2_selected

# df2에서 df1_mask의 첫번째 값(82)보다 큰것만 선정하고, 그 중 제일 첫 시간 선택

pass_time = df2_selected[df2_selected['value'] >= df1_mask.value.values[0]].index[0]
pass_time

df2_after_pass = df2_selected.truncate(before=pass_time)
df2_after_pass

# df2_after_pass 에서 pass 보다 2% 하락한 값 가져오기
# loss_price = df2_after_pass[df2_after_pass['value'] < df1_mask.value.values[0] * (1-0.02)].values[0]
loss_price = df2_after_pass[df2_after_pass['value'] < df1_mask.value.values[0] * (1-0.02)]
loss_price.iloc[0,0]
